
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Ikasleak API</title>
    <script>
        async function fetchIkasleak() {
            const response = await fetch('/api/ikasleak');
            const data = await response.json();
            document.getElementById('ikasleak').innerText = JSON.stringify(data, null, 2);
        }

        async function createIkasle() {
            const izena = document.getElementById('izena').value;
            const adina = document.getElementById('adina').value;
            const email = document.getElementById('email').value;

            const response = await fetch('/api/ikasleak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ izena, adina, email })
            });

            const data = await response.json();
            document.getElementById('newIkasle').innerText = JSON.stringify(data, null, 2);
            loadEmails();
            loadIkasleak();
        }
        
        async function deleteIkasle() {
        const id = document.getElementById("deleteId").value;

        const response = await fetch(`/api/ikasleak/${id}`, {
          method: "DELETE",
        });

        const data = await response.json();
        document.getElementById("deletedIkasle").innerText = JSON.stringify(data,null,2);
        loadEmails();
        loadIkasleak();
      }
      async function loadEmails() {
        const select = document.getElementById('aukeraEmail');
         try {
            const response = await fetch('/api/ikasleak');
            const ikasleak = await response.json();

            select.innerHTML = '';

            ikasleak.forEach(ikasle => {
                const option = document.createElement('option');
                option.value = ikasle.email; 
                option.textContent = ikasle.email;
                select.appendChild(option);
            });
        } catch (error) {
            console.error('Error al cargar los emails:', error);
        }
    }
    async function editIkasle() {
    const email = document.getElementById('aukeraEmail').value; 
    const izena = document.getElementById('editIzena').value;
    const adina = document.getElementById('editAdina').value;
    const newEmail = document.getElementById('editEmail').value;

    try {
        const response = await fetch(`/api/ikasleak/${email}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ izena, adina, email: newEmail }),
        });

        const data = await response.json();
        document.getElementById('updatedIkasle').innerText = JSON.stringify(data, null, 2);
        loadEmails();
        loadIkasleak();

    } catch (error) {
        console.error('Error al editar ikasle:', error);
    }
}
async function createTalde() {
            const izena = document.getElementById('taldeIzena').value;

            const response = await fetch('/api/taldeak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ izena })
            });

            const data = await response.json();
            document.getElementById('newTalde').innerText = JSON.stringify(data, null, 2);
            loadTaldeak();
        }
        async function loadIkasleak() {
            const select = document.getElementById('aukeraIkasle');
            try {
                const response = await fetch('/api/ikasleak');
                const ikasleak = await response.json();

                select.innerHTML = ''; 

                ikasleak.forEach(ikasle => {
                    const option = document.createElement('option');
                    option.value = ikasle._id; 
                    option.textContent = ikasle.email; 
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Error al cargar los Ikasleak:', error);
            }
        }
        async function loadTaldeak() {
            const select = document.getElementById('aukeraTalde');
            try {
                const response = await fetch('/api/taldeak');
                const taldeak = await response.json();

                select.innerHTML = ''; 

                taldeak.forEach(talde => {
                    const option = document.createElement('option');
                    option.value = talde._id;
                    option.textContent = talde.izena;
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Error al cargar los Taldeak:', error);
            }
        }

        async function assignIkasle() {
            const taldeId = document.getElementById('aukeraTalde').value;
            const ikasleId = document.getElementById('aukeraIkasle').value;

            try {
                const response = await fetch('/api/taldeak/assign', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ taldeId, ikasleId }),
                });

                const data = await response.json();
                document.getElementById('updatedTalde').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error('Error al asignar Ikasle al Talde:', error);
            }
        }
        async function fetchTaldeak() {
            const response = await fetch('/api/taldeak');
            const data = await response.json();
            document.getElementById('taldeak').innerText = JSON.stringify(data, null, 2);
        }
        document.addEventListener('DOMContentLoaded', () => {
            loadIkasleak();
            loadTaldeak();
            loadEmails();
        });
    </script>
</head>
<body>
    <h1>Test Ikasleak API</h1>
    <button onclick="fetchIkasleak()">Get Ikasleak</button>
    <pre id="ikasleak"></pre>

    <h2>Create Ikasle</h2>
    <form onsubmit="event.preventDefault(); createIkasle();">
        <label for="izena">Izena:</label>
        <input type="text" id="izena" name="izena" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="adina" name="adina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newIkasle"></pre>
    <h2>Delete Ikasle</h2>
    <form onsubmit="event.preventDefault(); deleteIkasle();">
        <label for="id">ID:</label>
        <input type="text" id="deleteId" name="deleteId" required>
        <br>
        <button type="submit">Delete</button>
    </form>
    <pre id="deletedIkasle"></pre>
    <h2>Edit Ikasle</h2>
    <form onsubmit="event.preventDefault(); editIkasle();">
        <label for="aukeraEmail">Ikasle Email:</label>
        <select id="aukeraEmail"></select>
        <br> 
        <label for="editIzena">Izena:</label>
        <input type="text" id="editIzena" name="editIzena" required>
        <br> 
        <label for="editAdina">Adina:</label>
        <input type="text" id="editAdina" name="editAdina" required>
        <br>
        <label for="editEmail">Email:</label>
        <input type="text" id="editEmail" name="editEmail" required>
        <br>
        <button type="submit">Edit</button>
    </form>
    <pre id="updatedIkasle"></pre>
    <h2>Create Talde</h2>
    <form onsubmit="event.preventDefault(); createTalde();">
        <label for="izena">Talde izena:</label>
        <input type="text" id="taldeIzena" name="taldeIzena" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newTalde"></pre>
    <h2>Assing Ikasle to Talde</h2>
    <form onsubmit="event.preventDefault(); assignIkasle();">
        <label for="aukeraTalde">Talde:</label>
        <select id="aukeraTalde"></select>
        <br> 
        <label for="aukeraIkasle">Ikasle:</label>
        <select id="aukeraIkasle"></select>
        <br> 
        <button type="submit">Assign</button>
    </form>
    <pre id="updatedTalde"></pre>
    <h2>Get Taldeak</h2>
    <button onclick="fetchTaldeak()">Get Talde</button>
    <pre id="taldeak"></pre>
</body>
</html>